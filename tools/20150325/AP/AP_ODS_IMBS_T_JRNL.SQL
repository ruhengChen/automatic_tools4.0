SELECT 'Rows updated:',COUNT(1) FROM (SELECT 1 FROM DELTA.IMBS_T_JRNL WHERE ETL_FLAG IN ('A','D')) S;

--REDO£ºDELETE LAST JOB LOADED DATA
DELETE FROM IMBS.T_JRNL WHERE JOB_SEQ_ID= New_JOB_SEQ_ID;

--REDO£ºRECOVERY DATA FROM HISTORY TABLE
INSERT INTO IMBS.T_JRNL(PLAT_DATE,SEQ_NO,BRCH_NO,TELLER_NO,AREA_NO,CHN_NO,BUSI_NO,ENTR_NO,ENTR_NAME,MNG_BRCH,RCKR_NO,AUTH_NO,TX_DATE,TX_TIME,ACT_DATE,ACT_TIME,OTH_DATE,OTH_TIME,CHK_ACT_NO,TX_MODE,TX_CODE,OLD_DATE,OLD_SEQ,DC_FLAG,TX_AMT,TX_FEE,TX_LATE,HOST_SEQ,OTH_SEQ,CUST_NO,CUST_NAME,USER_ID,VCH_TYPE,VCH_NO,ACT_NO1,ACT_NAME1,ACT_NO2,ACT_NAME2,HOST_ACT_NO1,HOST_CODE,HOST_MSG,OTH_CODE,OTH_MSG,RET_CODE,RET_MSG,TALLY_ORDER,SUMMARY,OPEN_BRCH_NO,TX_FLAG,HOST_CHK_STAT,ENTR_CHK_STAT,HOST_ACC_STAT,ENTR_ACC_STAT,EFF_DT,END_DT,JOB_SEQ_ID)
select PLAT_DATE,SEQ_NO,BRCH_NO,TELLER_NO,AREA_NO,CHN_NO,BUSI_NO,ENTR_NO,ENTR_NAME,MNG_BRCH,RCKR_NO,AUTH_NO,TX_DATE,TX_TIME,ACT_DATE,ACT_TIME,OTH_DATE,OTH_TIME,CHK_ACT_NO,TX_MODE,TX_CODE,OLD_DATE,OLD_SEQ,DC_FLAG,TX_AMT,TX_FEE,TX_LATE,HOST_SEQ,OTH_SEQ,CUST_NO,CUST_NAME,USER_ID,VCH_TYPE,VCH_NO,ACT_NO1,ACT_NAME1,ACT_NO2,ACT_NAME2,HOST_ACT_NO1,HOST_CODE,HOST_MSG,OTH_CODE,OTH_MSG,RET_CODE,RET_MSG,TALLY_ORDER,SUMMARY,OPEN_BRCH_NO,TX_FLAG,HOST_CHK_STAT,ENTR_CHK_STAT,HOST_ACC_STAT,ENTR_ACC_STAT,EFF_DT,END_DT,JOB_SEQ_ID
from ODSHIS.IMBS_T_JRNL WHERE NEW_JOB_SEQ_ID= New_JOB_SEQ_ID;

--REDO£ºDELETE HISTORY DATA
DELETE FROM ODSHIS.IMBS_T_JRNL WHERE NEW_JOB_SEQ_ID= New_JOB_SEQ_ID;

--BACKUP DATA TO HISTROY TABLE
SELECT 'Rows readed:',COUNT(1),'Rows changed:',COUNT(1) FROM (SELECT 1 FROM DELTA.IMBS_T_JRNL WHERE ETL_FLAG IN ('I','A','D')) S;
SELECT 'Rows updated:',COUNT(1) FROM NEW TABLE (
INSERT INTO ODSHIS.IMBS_T_JRNL(PLAT_DATE,SEQ_NO,BRCH_NO,TELLER_NO,AREA_NO,CHN_NO,BUSI_NO,ENTR_NO,ENTR_NAME,MNG_BRCH,RCKR_NO,AUTH_NO,TX_DATE,TX_TIME,ACT_DATE,ACT_TIME,OTH_DATE,OTH_TIME,CHK_ACT_NO,TX_MODE,TX_CODE,OLD_DATE,OLD_SEQ,DC_FLAG,TX_AMT,TX_FEE,TX_LATE,HOST_SEQ,OTH_SEQ,CUST_NO,CUST_NAME,USER_ID,VCH_TYPE,VCH_NO,ACT_NO1,ACT_NAME1,ACT_NO2,ACT_NAME2,HOST_ACT_NO1,HOST_CODE,HOST_MSG,OTH_CODE,OTH_MSG,RET_CODE,RET_MSG,TALLY_ORDER,SUMMARY,OPEN_BRCH_NO,TX_FLAG,HOST_CHK_STAT,ENTR_CHK_STAT,HOST_ACC_STAT,ENTR_ACC_STAT,EFF_DT,END_DT,JOB_SEQ_ID,NEW_JOB_SEQ_ID)
select PLAT_DATE,SEQ_NO,BRCH_NO,TELLER_NO,AREA_NO,CHN_NO,BUSI_NO,ENTR_NO,ENTR_NAME,MNG_BRCH,RCKR_NO,AUTH_NO,TX_DATE,TX_TIME,ACT_DATE,ACT_TIME,OTH_DATE,OTH_TIME,CHK_ACT_NO,TX_MODE,TX_CODE,OLD_DATE,OLD_SEQ,DC_FLAG,TX_AMT,TX_FEE,TX_LATE,HOST_SEQ,OTH_SEQ,CUST_NO,CUST_NAME,USER_ID,VCH_TYPE,VCH_NO,ACT_NO1,ACT_NAME1,ACT_NO2,ACT_NAME2,HOST_ACT_NO1,HOST_CODE,HOST_MSG,OTH_CODE,OTH_MSG,RET_CODE,RET_MSG,TALLY_ORDER,SUMMARY,OPEN_BRCH_NO,TX_FLAG,HOST_CHK_STAT,ENTR_CHK_STAT,HOST_ACC_STAT,ENTR_ACC_STAT,EFF_DT,END_DT,JOB_SEQ_ID,New_JOB_SEQ_ID
 from IMBS.T_JRNL T
WHERE T.END_DT='9999-12-31' AND EXISTS ( SELECT 1 FROM DELTA.IMBS_T_JRNL S
WHERE T.PLAT_DATE=S.PLAT_DATE AND T.SEQ_NO=S.SEQ_NO ));

--DROP ZIPPER
MERGE INTO IMBS.T_JRNL T 
USING (SELECT * FROM DELTA.IMBS_T_JRNL WHERE ETL_FLAG IN ('I','D','A')) S
ON T.PLAT_DATE=S.PLAT_DATE AND T.SEQ_NO=S.SEQ_NO  AND T.END_DT='9999-12-31' 
   WHEN MATCHED THEN UPDATE SET 
T.END_DT='#DATEOFDATA#', T.JOB_SEQ_ID= New_JOB_SEQ_ID;

--CREATE ZIPPER
INSERT INTO IMBS.T_JRNL(PLAT_DATE,SEQ_NO,BRCH_NO,TELLER_NO,AREA_NO,CHN_NO,BUSI_NO,ENTR_NO,ENTR_NAME,MNG_BRCH,RCKR_NO,AUTH_NO,TX_DATE,TX_TIME,ACT_DATE,ACT_TIME,OTH_DATE,OTH_TIME,CHK_ACT_NO,TX_MODE,TX_CODE,OLD_DATE,OLD_SEQ,DC_FLAG,TX_AMT,TX_FEE,TX_LATE,HOST_SEQ,OTH_SEQ,CUST_NO,CUST_NAME,USER_ID,VCH_TYPE,VCH_NO,ACT_NO1,ACT_NAME1,ACT_NO2,ACT_NAME2,HOST_ACT_NO1,HOST_CODE,HOST_MSG,OTH_CODE,OTH_MSG,RET_CODE,RET_MSG,TALLY_ORDER,SUMMARY,OPEN_BRCH_NO,TX_FLAG,HOST_CHK_STAT,ENTR_CHK_STAT,HOST_ACC_STAT,ENTR_ACC_STAT,EFF_DT,END_DT,JOB_SEQ_ID)
select PLAT_DATE,SEQ_NO,BRCH_NO,TELLER_NO,AREA_NO,CHN_NO,BUSI_NO,ENTR_NO,ENTR_NAME,MNG_BRCH,RCKR_NO,AUTH_NO,TX_DATE,TX_TIME,ACT_DATE,ACT_TIME,OTH_DATE,OTH_TIME,CHK_ACT_NO,TX_MODE,TX_CODE,OLD_DATE,OLD_SEQ,DC_FLAG,TX_AMT,TX_FEE,TX_LATE,HOST_SEQ,OTH_SEQ,CUST_NO,CUST_NAME,USER_ID,VCH_TYPE,VCH_NO,ACT_NO1,ACT_NAME1,ACT_NO2,ACT_NAME2,HOST_ACT_NO1,HOST_CODE,HOST_MSG,OTH_CODE,OTH_MSG,RET_CODE,RET_MSG,TALLY_ORDER,SUMMARY,OPEN_BRCH_NO,TX_FLAG,HOST_CHK_STAT,ENTR_CHK_STAT,HOST_ACC_STAT,ENTR_ACC_STAT,'#DATEOFDATA#','9999-12-31',New_JOB_SEQ_ID
from DELTA.IMBS_T_JRNL where ETL_FLAG in ('A','I');

--CONFERM DATA INTEGRITY
MERGE INTO IMBS.T_JRNL T 
USING (SELECT * FROM DELTA.IMBS_T_JRNL WHERE ETL_FLAG = 'D' ) S
ON T.PLAT_DATE=S.PLAT_DATE AND T.SEQ_NO=S.SEQ_NO
WHEN NOT MATCHED THEN
INSERT (PLAT_DATE,SEQ_NO,BRCH_NO,TELLER_NO,AREA_NO,CHN_NO,BUSI_NO,ENTR_NO,ENTR_NAME,MNG_BRCH,RCKR_NO,AUTH_NO,TX_DATE,TX_TIME,ACT_DATE,ACT_TIME,OTH_DATE,OTH_TIME,CHK_ACT_NO,TX_MODE,TX_CODE,OLD_DATE,OLD_SEQ,DC_FLAG,TX_AMT,TX_FEE,TX_LATE,HOST_SEQ,OTH_SEQ,CUST_NO,CUST_NAME,USER_ID,VCH_TYPE,VCH_NO,ACT_NO1,ACT_NAME1,ACT_NO2,ACT_NAME2,HOST_ACT_NO1,HOST_CODE,HOST_MSG,OTH_CODE,OTH_MSG,RET_CODE,RET_MSG,TALLY_ORDER,SUMMARY,OPEN_BRCH_NO,TX_FLAG,HOST_CHK_STAT,ENTR_CHK_STAT,HOST_ACC_STAT,ENTR_ACC_STAT,EFF_DT,END_DT,JOB_SEQ_ID)
VALUES (PLAT_DATE,SEQ_NO,BRCH_NO,TELLER_NO,AREA_NO,CHN_NO,BUSI_NO,ENTR_NO,ENTR_NAME,MNG_BRCH,RCKR_NO,AUTH_NO,TX_DATE,TX_TIME,ACT_DATE,ACT_TIME,OTH_DATE,OTH_TIME,CHK_ACT_NO,TX_MODE,TX_CODE,OLD_DATE,OLD_SEQ,DC_FLAG,TX_AMT,TX_FEE,TX_LATE,HOST_SEQ,OTH_SEQ,CUST_NO,CUST_NAME,USER_ID,VCH_TYPE,VCH_NO,ACT_NO1,ACT_NAME1,ACT_NO2,ACT_NAME2,HOST_ACT_NO1,HOST_CODE,HOST_MSG,OTH_CODE,OTH_MSG,RET_CODE,RET_MSG,TALLY_ORDER,SUMMARY,OPEN_BRCH_NO,TX_FLAG,HOST_CHK_STAT,ENTR_CHK_STAT,HOST_ACC_STAT,ENTR_ACC_STAT,'#DATEOFDATA#','#DATEOFDATA#',New_JOB_SEQ_ID);