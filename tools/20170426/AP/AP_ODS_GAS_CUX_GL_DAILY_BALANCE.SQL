SELECT 'Rows updated:',COUNT(1) FROM (SELECT 1 FROM DELTA.GAS_CUX_GL_DAILY_BALANCE WHERE ETL_FLAG IN ('A','D')) S;

--REDO£ºDELETE LAST JOB LOADED DATA
DELETE FROM GAS.CUX_GL_DAILY_BALANCE WHERE JOB_SEQ_ID= New_JOB_SEQ_ID;

--REDO£ºRECOVERY DATA FROM HISTORY TABLE
INSERT INTO GAS.CUX_GL_DAILY_BALANCE(LEDGER_ID,TRANSACTION_DATE,CODE_COMBINATION_ID,CUX_CODE_COMBINATION_ID,ACTUAL_FLAG,CURRENCY_CODE,BEGIN_BALANCE_DR,BEGIN_BALANCE_CR,DAY_NET_DR,DAY_NET_CR,END_BALANCE_DR,END_BALANCE_CR,MONTH_AGGREGATE_DR,MONTH_AGGREGATE_CR,QUARTER_AGGREGATE_DR,QUARTER_AGGREGATE_CR,YEAR_AGGREGATE_DR,YEAR_AGGREGATE_CR,FUNCTIONAL_BEGIN_BALANCE_DR,FUNCTIONAL_BEGIN_BALANCE_CR,FUNCTIONAL_DAY_NET_DR,FUNCTIONAL_DAY_NET_CR,FUNCTIONAL_END_BALANCE_DR,FUNCTIONAL_END_BALANCE_CR,FUNCTIONAL_CURRENCY_CODE,FUN_MONTH_AGGREGATE_DR,FUN_MONTH_AGGREGATE_CR,FUN_QUARTER_AGGREGATE_DR,FUN_QUARTER_AGGREGATE_CR,FUN_YEAR_AGGREGATE_DR,FUN_YEAR_AGGREGATE_CR,EFF_DT,END_DT,JOB_SEQ_ID)
select LEDGER_ID,TRANSACTION_DATE,CODE_COMBINATION_ID,CUX_CODE_COMBINATION_ID,ACTUAL_FLAG,CURRENCY_CODE,BEGIN_BALANCE_DR,BEGIN_BALANCE_CR,DAY_NET_DR,DAY_NET_CR,END_BALANCE_DR,END_BALANCE_CR,MONTH_AGGREGATE_DR,MONTH_AGGREGATE_CR,QUARTER_AGGREGATE_DR,QUARTER_AGGREGATE_CR,YEAR_AGGREGATE_DR,YEAR_AGGREGATE_CR,FUNCTIONAL_BEGIN_BALANCE_DR,FUNCTIONAL_BEGIN_BALANCE_CR,FUNCTIONAL_DAY_NET_DR,FUNCTIONAL_DAY_NET_CR,FUNCTIONAL_END_BALANCE_DR,FUNCTIONAL_END_BALANCE_CR,FUNCTIONAL_CURRENCY_CODE,FUN_MONTH_AGGREGATE_DR,FUN_MONTH_AGGREGATE_CR,FUN_QUARTER_AGGREGATE_DR,FUN_QUARTER_AGGREGATE_CR,FUN_YEAR_AGGREGATE_DR,FUN_YEAR_AGGREGATE_CR,EFF_DT,END_DT,JOB_SEQ_ID
from ODSHIS.GAS_CUX_GL_DAILY_BALANCE WHERE NEW_JOB_SEQ_ID= New_JOB_SEQ_ID;

--REDO£ºDELETE HISTORY DATA
DELETE FROM ODSHIS.GAS_CUX_GL_DAILY_BALANCE WHERE NEW_JOB_SEQ_ID= New_JOB_SEQ_ID;

--BACKUP DATA TO HISTROY TABLE
SELECT 'Rows readed:',COUNT(1),'Rows changed:',COUNT(1) FROM (SELECT 1 FROM DELTA.GAS_CUX_GL_DAILY_BALANCE WHERE ETL_FLAG IN ('I','A','D')) S;
SELECT 'Rows updated:',COUNT(1) FROM NEW TABLE (
INSERT INTO ODSHIS.GAS_CUX_GL_DAILY_BALANCE(LEDGER_ID,TRANSACTION_DATE,CODE_COMBINATION_ID,CUX_CODE_COMBINATION_ID,ACTUAL_FLAG,CURRENCY_CODE,BEGIN_BALANCE_DR,BEGIN_BALANCE_CR,DAY_NET_DR,DAY_NET_CR,END_BALANCE_DR,END_BALANCE_CR,MONTH_AGGREGATE_DR,MONTH_AGGREGATE_CR,QUARTER_AGGREGATE_DR,QUARTER_AGGREGATE_CR,YEAR_AGGREGATE_DR,YEAR_AGGREGATE_CR,FUNCTIONAL_BEGIN_BALANCE_DR,FUNCTIONAL_BEGIN_BALANCE_CR,FUNCTIONAL_DAY_NET_DR,FUNCTIONAL_DAY_NET_CR,FUNCTIONAL_END_BALANCE_DR,FUNCTIONAL_END_BALANCE_CR,FUNCTIONAL_CURRENCY_CODE,FUN_MONTH_AGGREGATE_DR,FUN_MONTH_AGGREGATE_CR,FUN_QUARTER_AGGREGATE_DR,FUN_QUARTER_AGGREGATE_CR,FUN_YEAR_AGGREGATE_DR,FUN_YEAR_AGGREGATE_CR,EFF_DT,END_DT,JOB_SEQ_ID,NEW_JOB_SEQ_ID)
select LEDGER_ID,TRANSACTION_DATE,CODE_COMBINATION_ID,CUX_CODE_COMBINATION_ID,ACTUAL_FLAG,CURRENCY_CODE,BEGIN_BALANCE_DR,BEGIN_BALANCE_CR,DAY_NET_DR,DAY_NET_CR,END_BALANCE_DR,END_BALANCE_CR,MONTH_AGGREGATE_DR,MONTH_AGGREGATE_CR,QUARTER_AGGREGATE_DR,QUARTER_AGGREGATE_CR,YEAR_AGGREGATE_DR,YEAR_AGGREGATE_CR,FUNCTIONAL_BEGIN_BALANCE_DR,FUNCTIONAL_BEGIN_BALANCE_CR,FUNCTIONAL_DAY_NET_DR,FUNCTIONAL_DAY_NET_CR,FUNCTIONAL_END_BALANCE_DR,FUNCTIONAL_END_BALANCE_CR,FUNCTIONAL_CURRENCY_CODE,FUN_MONTH_AGGREGATE_DR,FUN_MONTH_AGGREGATE_CR,FUN_QUARTER_AGGREGATE_DR,FUN_QUARTER_AGGREGATE_CR,FUN_YEAR_AGGREGATE_DR,FUN_YEAR_AGGREGATE_CR,EFF_DT,END_DT,JOB_SEQ_ID,New_JOB_SEQ_ID
 from GAS.CUX_GL_DAILY_BALANCE T
WHERE T.END_DT='9999-12-31' AND EXISTS ( SELECT 1 FROM DELTA.GAS_CUX_GL_DAILY_BALANCE S
WHERE T.LEDGER_ID=S.LEDGER_ID AND T.TRANSACTION_DATE=S.TRANSACTION_DATE AND T.CUX_CODE_COMBINATION_ID=S.CUX_CODE_COMBINATION_ID AND T.ACTUAL_FLAG=S.ACTUAL_FLAG AND T.CURRENCY_CODE=S.CURRENCY_CODE ));

--DROP ZIPPER
MERGE INTO GAS.CUX_GL_DAILY_BALANCE T 
USING (SELECT * FROM DELTA.GAS_CUX_GL_DAILY_BALANCE WHERE ETL_FLAG IN ('I','D','A')) S
ON T.LEDGER_ID=S.LEDGER_ID AND T.TRANSACTION_DATE=S.TRANSACTION_DATE AND T.CUX_CODE_COMBINATION_ID=S.CUX_CODE_COMBINATION_ID AND T.ACTUAL_FLAG=S.ACTUAL_FLAG AND T.CURRENCY_CODE=S.CURRENCY_CODE  AND T.END_DT='9999-12-31' 
   WHEN MATCHED THEN UPDATE SET 
T.END_DT='#DATEOFDATA#', T.JOB_SEQ_ID= New_JOB_SEQ_ID;

--CREATE ZIPPER
INSERT INTO GAS.CUX_GL_DAILY_BALANCE(LEDGER_ID,TRANSACTION_DATE,CODE_COMBINATION_ID,CUX_CODE_COMBINATION_ID,ACTUAL_FLAG,CURRENCY_CODE,BEGIN_BALANCE_DR,BEGIN_BALANCE_CR,DAY_NET_DR,DAY_NET_CR,END_BALANCE_DR,END_BALANCE_CR,MONTH_AGGREGATE_DR,MONTH_AGGREGATE_CR,QUARTER_AGGREGATE_DR,QUARTER_AGGREGATE_CR,YEAR_AGGREGATE_DR,YEAR_AGGREGATE_CR,FUNCTIONAL_BEGIN_BALANCE_DR,FUNCTIONAL_BEGIN_BALANCE_CR,FUNCTIONAL_DAY_NET_DR,FUNCTIONAL_DAY_NET_CR,FUNCTIONAL_END_BALANCE_DR,FUNCTIONAL_END_BALANCE_CR,FUNCTIONAL_CURRENCY_CODE,FUN_MONTH_AGGREGATE_DR,FUN_MONTH_AGGREGATE_CR,FUN_QUARTER_AGGREGATE_DR,FUN_QUARTER_AGGREGATE_CR,FUN_YEAR_AGGREGATE_DR,FUN_YEAR_AGGREGATE_CR,EFF_DT,END_DT,JOB_SEQ_ID)
select LEDGER_ID,TRANSACTION_DATE,CODE_COMBINATION_ID,CUX_CODE_COMBINATION_ID,ACTUAL_FLAG,CURRENCY_CODE,BEGIN_BALANCE_DR,BEGIN_BALANCE_CR,DAY_NET_DR,DAY_NET_CR,END_BALANCE_DR,END_BALANCE_CR,MONTH_AGGREGATE_DR,MONTH_AGGREGATE_CR,QUARTER_AGGREGATE_DR,QUARTER_AGGREGATE_CR,YEAR_AGGREGATE_DR,YEAR_AGGREGATE_CR,FUNCTIONAL_BEGIN_BALANCE_DR,FUNCTIONAL_BEGIN_BALANCE_CR,FUNCTIONAL_DAY_NET_DR,FUNCTIONAL_DAY_NET_CR,FUNCTIONAL_END_BALANCE_DR,FUNCTIONAL_END_BALANCE_CR,FUNCTIONAL_CURRENCY_CODE,FUN_MONTH_AGGREGATE_DR,FUN_MONTH_AGGREGATE_CR,FUN_QUARTER_AGGREGATE_DR,FUN_QUARTER_AGGREGATE_CR,FUN_YEAR_AGGREGATE_DR,FUN_YEAR_AGGREGATE_CR,'#DATEOFDATA#','9999-12-31',New_JOB_SEQ_ID
from DELTA.GAS_CUX_GL_DAILY_BALANCE where ETL_FLAG in ('A','I');

--CONFERM DATA INTEGRITY
MERGE INTO GAS.CUX_GL_DAILY_BALANCE T 
USING (SELECT * FROM DELTA.GAS_CUX_GL_DAILY_BALANCE WHERE ETL_FLAG = 'D' ) S
ON T.LEDGER_ID=S.LEDGER_ID AND T.TRANSACTION_DATE=S.TRANSACTION_DATE AND T.CUX_CODE_COMBINATION_ID=S.CUX_CODE_COMBINATION_ID AND T.ACTUAL_FLAG=S.ACTUAL_FLAG AND T.CURRENCY_CODE=S.CURRENCY_CODE
WHEN NOT MATCHED THEN
INSERT (LEDGER_ID,TRANSACTION_DATE,CODE_COMBINATION_ID,CUX_CODE_COMBINATION_ID,ACTUAL_FLAG,CURRENCY_CODE,BEGIN_BALANCE_DR,BEGIN_BALANCE_CR,DAY_NET_DR,DAY_NET_CR,END_BALANCE_DR,END_BALANCE_CR,MONTH_AGGREGATE_DR,MONTH_AGGREGATE_CR,QUARTER_AGGREGATE_DR,QUARTER_AGGREGATE_CR,YEAR_AGGREGATE_DR,YEAR_AGGREGATE_CR,FUNCTIONAL_BEGIN_BALANCE_DR,FUNCTIONAL_BEGIN_BALANCE_CR,FUNCTIONAL_DAY_NET_DR,FUNCTIONAL_DAY_NET_CR,FUNCTIONAL_END_BALANCE_DR,FUNCTIONAL_END_BALANCE_CR,FUNCTIONAL_CURRENCY_CODE,FUN_MONTH_AGGREGATE_DR,FUN_MONTH_AGGREGATE_CR,FUN_QUARTER_AGGREGATE_DR,FUN_QUARTER_AGGREGATE_CR,FUN_YEAR_AGGREGATE_DR,FUN_YEAR_AGGREGATE_CR,EFF_DT,END_DT,JOB_SEQ_ID)
VALUES (LEDGER_ID,TRANSACTION_DATE,CODE_COMBINATION_ID,CUX_CODE_COMBINATION_ID,ACTUAL_FLAG,CURRENCY_CODE,BEGIN_BALANCE_DR,BEGIN_BALANCE_CR,DAY_NET_DR,DAY_NET_CR,END_BALANCE_DR,END_BALANCE_CR,MONTH_AGGREGATE_DR,MONTH_AGGREGATE_CR,QUARTER_AGGREGATE_DR,QUARTER_AGGREGATE_CR,YEAR_AGGREGATE_DR,YEAR_AGGREGATE_CR,FUNCTIONAL_BEGIN_BALANCE_DR,FUNCTIONAL_BEGIN_BALANCE_CR,FUNCTIONAL_DAY_NET_DR,FUNCTIONAL_DAY_NET_CR,FUNCTIONAL_END_BALANCE_DR,FUNCTIONAL_END_BALANCE_CR,FUNCTIONAL_CURRENCY_CODE,FUN_MONTH_AGGREGATE_DR,FUN_MONTH_AGGREGATE_CR,FUN_QUARTER_AGGREGATE_DR,FUN_QUARTER_AGGREGATE_CR,FUN_YEAR_AGGREGATE_DR,FUN_YEAR_AGGREGATE_CR,'#DATEOFDATA#','#DATEOFDATA#',New_JOB_SEQ_ID);